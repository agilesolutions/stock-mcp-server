apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
    version: {{ .Chart.Version }}
  annotations:
    sampleannotation: annotationvalue
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 15
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 15
          lifecycle:
            preStop:
              httpGet:
                path: /unhealthy
                port: http
          restartPolicy: Always
          terminationGracePeriodSeconds: 10
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: podinfo
              mountPath: /etc/podinfo
              readOnly: false
          env:
            - name: MYSQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: demo-secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: demo-secret
                  key: password
            - name: LABEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations